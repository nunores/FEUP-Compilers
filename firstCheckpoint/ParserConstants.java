/* Generated By:JJTree&JavaCC: Do not edit this line. ParserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int INTEGER = 4;
  /** RegularExpression Id. */
  int LF = 5;
  /** RegularExpression Id. */
  int EQ = 6;
  /** RegularExpression Id. */
  int COL = 7;
  /** RegularExpression Id. */
  int SEMICOL = 8;
  /** RegularExpression Id. */
  int DOT = 9;
  /** RegularExpression Id. */
  int LBRACE = 10;
  /** RegularExpression Id. */
  int RBRACE = 11;
  /** RegularExpression Id. */
  int LPAR = 12;
  /** RegularExpression Id. */
  int RPAR = 13;
  /** RegularExpression Id. */
  int LBRACK = 14;
  /** RegularExpression Id. */
  int RBRACK = 15;
  /** RegularExpression Id. */
  int AND = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int LESS = 18;
  /** RegularExpression Id. */
  int PLUS = 19;
  /** RegularExpression Id. */
  int MINUS = 20;
  /** RegularExpression Id. */
  int MULT = 21;
  /** RegularExpression Id. */
  int DIV = 22;
  /** RegularExpression Id. */
  int PERCENTAGE = 23;
  /** RegularExpression Id. */
  int TRUE = 24;
  /** RegularExpression Id. */
  int FALSE = 25;
  /** RegularExpression Id. */
  int THIS = 26;
  /** RegularExpression Id. */
  int NEW = 27;
  /** RegularExpression Id. */
  int INT = 28;
  /** RegularExpression Id. */
  int INTARRAY = 29;
  /** RegularExpression Id. */
  int STRINGARRAY = 30;
  /** RegularExpression Id. */
  int BOOLEAN = 31;
  /** RegularExpression Id. */
  int NOT = 32;
  /** RegularExpression Id. */
  int IMPORT = 33;
  /** RegularExpression Id. */
  int CLASS = 34;
  /** RegularExpression Id. */
  int EXTENDS = 35;
  /** RegularExpression Id. */
  int IF = 36;
  /** RegularExpression Id. */
  int VOID = 37;
  /** RegularExpression Id. */
  int ELSE = 38;
  /** RegularExpression Id. */
  int LENGTH = 39;
  /** RegularExpression Id. */
  int MAIN = 40;
  /** RegularExpression Id. */
  int WHILE = 41;
  /** RegularExpression Id. */
  int PUBLIC = 42;
  /** RegularExpression Id. */
  int STATIC = 43;
  /** RegularExpression Id. */
  int STRING = 44;
  /** RegularExpression Id. */
  int RETURN = 45;
  /** RegularExpression Id. */
  int VAR = 46;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "<INTEGER>",
    "\"\\n\"",
    "\"=\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"&&\"",
    "\"||\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"int\"",
    "\"int[]\"",
    "\"String[]\"",
    "\"boolean\"",
    "\"!\"",
    "\"import\"",
    "\"class\"",
    "\"extends\"",
    "\"if\"",
    "\"void\"",
    "\"else\"",
    "\"length\"",
    "\"main\"",
    "\"while\"",
    "\"public\"",
    "\"static\"",
    "\"string\"",
    "\"return\"",
    "<VAR>",
  };

}
