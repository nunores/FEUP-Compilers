Fac {
	.construct Fac().V {
		invokespecial(this, "<init>").V;
	}
	
	.method public compFac(num.i32).i32 {
        num_aux.i32 :=.i32 1.i32;

        aux1.i32 :=.i32 $1.num.i32 -.i32 1.i32;
        aux2.i32 :=.i32 invokevirtual(this, "compFac", aux1.i32).i32;
        num_aux.i32 :=.i32 $1.num.i32 *.i32 aux2.i32;

        ret.i32 num_aux.i32;
	}
	
	.method public static main(args.array.String).V {
		aux1.Fac :=.Fac new(Fac).Fac;
		invokespecial(aux1.Fac,"<init>").V;
		aux2.i32 :=.i32 invokevirtual(aux1.Fac,"compFac",10.i32).i32;
		invokestatic(io, "println", aux2.i3).V;
	}
}